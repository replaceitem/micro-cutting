import net.replaceitem.microcutting.Converter

plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

tasks.register('updatePack') {
    doLast {
        rootProject.file("data").deleteDir()
        Converter.createPack(rootProject.rootDir.toPath(), rootProject.file("add_trade.mcfunction"))
    }
}

tasks.register('installPack') {
    dependsOn 'zipPack'
    doLast {
        def zipFile = tasks.named('zipPack').get().archiveFile.get().asFile
        def destinationDir = file("${rootProject.rootDir}/run/saves/world/datapacks")
        if (!destinationDir.exists()) destinationDir.mkdirs()
        ant.move(file: zipFile, todir: destinationDir)
    }
}

tasks.register('zipPack', Zip) {
    destinationDirectory = file("${rootProject.layout.buildDirectory.getAsFile().get()}/libs")
    from('.') {
        include 'data/**'
        include 'pack.mcmeta'
        include 'pack.png'
        include 'LICENSE'
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "8B77TpQR"
    versionNumber = project.pack_version
    versionType = "release"
    uploadFile = zipPack
    loaders = ["datapack"]
    gameVersions = ["24w10a"]
    changelog = rootProject.file("changelog.md").text
    syncBodyFrom = rootProject.file("README.md").text
}
